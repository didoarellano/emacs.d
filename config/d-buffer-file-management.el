(require 'recentf)
(recentf-mode 1)
(setq recentf-max-menu-items 30)

(evil-leader/set-key "ba" 'mark-whole-buffer)
(evil-leader/set-key "bB" 'ido-switch-buffer)
(evil-leader/set-key "bR" 'revert-buffer)
(global-set-key (kbd "<f5>") 'revert-buffer)
(evil-leader/set-key "bk" 'ido-kill-buffer)
(evil-leader/set-key "bK" 'd-kill-this-buffer)

(evil-leader/set-key "fI" 'insert-file)
(evil-leader/set-key "fr" 'd-ido-recentf-open)
(evil-leader/set-key "fR" 'rename-file-and-buffer)
(evil-leader/set-key "fD" 'delete-file-and-buffer)
(evil-leader/set-key "fF" 'ido-find-file)

;; Dired
(require 'dired)
(put 'dired-find-alternate-file 'disabled nil)
;; (setq dired-listing-switches "-laGhp --time-style=\"+%Y-%m-%d %I:%M\" --group-directories-first")
(setq dired-listing-switches "-laGhp --time-style=long-iso --group-directories-first")
(defun d-dired-mode-hook ()
  (auto-revert-mode)
  (dired-hide-details-mode))
(add-hook 'dired-mode-hook 'd-dired-mode-hook)

(defun d-kill-all-dired-buffers ()
  (interactive)
  (mapc (lambda (buffer)
          (when (eq 'dired-mode (buffer-local-value 'major-mode buffer))
            (kill-buffer buffer)))
        (buffer-list)))

(defun d-dired-open-thing-at-point ()
  (interactive)
  (let ((filename (dired-get-filename)))
    ;; (message "%s" (file-directory-p filename))))
    (if (file-directory-p filename)
        (dired-find-alternate-file)
      (dired-find-file))))

(evil-leader/set-key "fd" 'dired-jump)
(evil-define-key 'normal dired-mode-map "h" 'dired-up-directory)
(evil-define-key 'normal dired-mode-map "l" 'dired-find-file)
(evil-define-key 'normal dired-mode-map "gf" 'dired-find-file)
(evil-define-key 'normal dired-mode-map (kbd "<return>") 'dired-find-file)
(evil-define-key 'normal dired-mode-map "gg" 'evil-goto-first-line)
(evil-define-key 'normal dired-mode-map "G" 'evil-goto-line) ; was `dired-do-chgrp'
(evil-define-key 'normal dired-mode-map "n" 'evil-search-next)
(evil-define-key 'normal dired-mode-map "N" 'evil-search-previous)
(evil-define-key 'normal dired-mode-map "C" 'dired-create-directory)

(provide 'd-buffer-file-management)
